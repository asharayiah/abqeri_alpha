{
  "version": 3,
  "sources": ["../../../src/index.js", "../../../../../Users/ashar/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../Users/ashar/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-sbLwdd/middleware-insertion-facade.js", "../../../../../Users/ashar/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-sbLwdd/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\abqeri-alpha-v6.7\\copy\\.wrangler\\tmp\\dev-ukTOMP",
  "sourcesContent": ["// src/index.js\n// Abqeri Worker: Auth + Safe-AI + Hybrid demo + Static\n// - Stronger D1 auto-migrate (always runs once before auth)\n// - Dev diagnostics: returns real D1 error when ALLOW_FAKE_TURNSTILE=\"1\"\n\nconst J = (o, s = 200, h = {}) =>\n  new Response(JSON.stringify(o), { status: s, headers: { \"content-type\": \"application/json\", ...h } });\nconst T = (s, c = 200, h = {}) => new Response(s, { status: c, headers: { \"content-type\": \"text/plain; charset=utf-8\", ...h } });\nconst now = () => Math.floor(Date.now() / 1000);\n\n// ---------- cookie helpers ----------\nfunction getCookie(req, name) {\n  const raw = req.headers.get(\"Cookie\") || \"\";\n  const m = raw.match(new RegExp(\"(?:^|; )\" + name + \"=([^;]+)\"));\n  return m ? decodeURIComponent(m[1]) : null;\n}\nfunction setCookie(name, val, days = 30) {\n  const exp = new Date(Date.now() + days * 86400e3).toUTCString();\n  return `${name}=${encodeURIComponent(val)}; Path=/; SameSite=Lax; Expires=${exp}`;\n}\nasync function session(_env, req) {\n  const tok = getCookie(req, \"abqeri_session\");\n  if (!tok) return null;\n  try { return JSON.parse(atob(tok)); } catch { return null; }\n}\n\n// ---------- D1 MIGRATIONS ----------\nconst MIGRATIONS = [\n  `\n  CREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    email TEXT NOT NULL UNIQUE,\n    username TEXT NOT NULL,\n    pass_hash TEXT NOT NULL,\n    role TEXT NOT NULL DEFAULT 'user',\n    plan TEXT NOT NULL DEFAULT 'free',\n    status TEXT NOT NULL DEFAULT 'active',\n    created_at INTEGER NOT NULL,\n    updated_at INTEGER NOT NULL\n  );\n  CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);\n  `,\n];\n\nasync function getUserVersion(env) {\n  try {\n    const r = await env.abqeri_alpha.prepare(\"PRAGMA user_version;\").all();\n    const row = r?.results?.[0] || {};\n    const k = Object.keys(row)[0];\n    return Number(row[k] ?? 0) || 0;\n  } catch { return 0; }\n}\nasync function setUserVersion(env, v) {\n  await env.abqeri_alpha.exec(`PRAGMA user_version=${v};`);\n}\nasync function runMigrations(env) {\n  let uv = await getUserVersion(env);\n  for (let i = uv; i < MIGRATIONS.length; i++) {\n    await env.abqeri_alpha.exec(MIGRATIONS[i]);\n    await setUserVersion(env, i + 1);\n  }\n  return { applied: Math.max(0, MIGRATIONS.length - uv), version: MIGRATIONS.length };\n}\n// Always ensure at least once per boot (cheap and idempotent)\nlet MIGRATED = false;\nasync function ensureSchema(env) {\n  if (MIGRATED) return;\n  try {\n    const exists = await env.abqeri_alpha\n      .prepare(\"SELECT 1 FROM sqlite_master WHERE type='table' AND name='users'\")\n      .all();\n    if (!exists?.results?.length) await runMigrations(env);\n    else {\n      // Even if table exists but user_version is old, bump it\n      await runMigrations(env);\n    }\n    MIGRATED = true;\n  } catch (e) {\n    // Last effort: try migrations and rethrow on failure\n    await runMigrations(env);\n    MIGRATED = true;\n  }\n}\n\n// ---------- D1 helpers ----------\nasync function findUser(env, email) {\n  await ensureSchema(env);\n  return await env.abqeri_alpha.prepare(`SELECT * FROM users WHERE email=?`).bind(email).first();\n}\nasync function insertUser(env, email, username, password) {\n  await ensureSchema(env);\n  const raw = new TextEncoder().encode(password);\n  const d = await crypto.subtle.digest(\"SHA-256\", raw);\n  const pass_hash = [...new Uint8Array(d)].map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n  const ts = now();\n  await env.abqeri_alpha.prepare(\n    `INSERT INTO users (email, username, pass_hash, role, plan, status, created_at, updated_at)\n     VALUES (?, ?, ?, 'user', 'free', 'active', ?, ?)`\n  ).bind(email.trim().toLowerCase(), username.trim(), pass_hash, ts, ts).run();\n  return await findUser(env, email.trim().toLowerCase());\n}\nasync function checkPass(user, password) {\n  const raw = new TextEncoder().encode(password);\n  const d = await crypto.subtle.digest(\"SHA-256\", raw);\n  const hex = [...new Uint8Array(d)].map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return user.pass_hash === hex;\n}\n\n// ---------- Turnstile ----------\nasync function verifyTurnstile(env, token) {\n  if (env.ALLOW_FAKE_TURNSTILE === \"1\") return true;\n  if (!token) return false;\n  try {\n    const form = new FormData();\n    form.append(\"secret\", env.TURNSTILE_SECRET || \"1x0000000000000000000000000000000AA\");\n    form.append(\"response\", token);\n    const r = await fetch(\"https://challenges.cloudflare.com/turnstile/v0/siteverify\", { method: \"POST\", body: form });\n    const j = await r.json();\n    return !!j.success;\n  } catch { return false; }\n}\n\n// ---------- Auth APIs (with DEV error passthrough) ----------\nfunction badRequest(code) { return J({ ok:false, error:code }, 400); }\n\nasync function POST_register(env, req) {\n  try {\n    await ensureSchema(env);\n    const { email, username, password, confirm, turnstile } = await req.json().catch(() => ({}));\n\n    if (!email || !username || !password || !confirm) return badRequest(\"missing_fields\");\n    if (!/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(String(email))) return badRequest(\"bad_email\");\n    if (password !== confirm) return badRequest(\"password_mismatch\");\n    if (password.length < 8) return badRequest(\"weak_password\");\n    if (!(await verifyTurnstile(env, turnstile))) return J({ ok:false, error:\"captcha_failed\" }, 400);\n\n    const exists = await findUser(env, email.trim().toLowerCase());\n    if (exists) return J({ ok:false, error:\"email_exists\" }, 409);\n\n    const u = await insertUser(env, email, username, password);\n    const tok = btoa(JSON.stringify({ uid:u.id, email:u.email, role:u.role, plan:u.plan, t:now() }));\n    return J({ ok:true, redirect:\"/pricing.html?from=register\" }, 200, { \"Set-Cookie\": setCookie(\"abqeri_session\", tok) });\n\n  } catch (e) {\n    const dev = env.ALLOW_FAKE_TURNSTILE === \"1\" ? { dev_hint: String(e?.message || e) } : {};\n    return J({ ok:false, error:\"db_error\", ...dev }, 500);\n  }\n}\n\nasync function POST_login(env, req) {\n  try {\n    await ensureSchema(env);\n    const { email, password } = await req.json().catch(() => ({}));\n    if (!email || !password) return badRequest(\"missing_fields\");\n    const u = await findUser(env, String(email).trim().toLowerCase());\n    if (!u) return J({ ok:false, error:\"invalid_credentials\" }, 401);\n    if (!(await checkPass(u, password))) return J({ ok:false, error:\"invalid_credentials\" }, 401);\n    const tok = btoa(JSON.stringify({ uid:u.id, email:u.email, role:u.role, plan:u.plan, t:now() }));\n    return J({ ok:true, redirect:\"/workbench?lang=en#tab=safe\" }, 200, { \"Set-Cookie\": setCookie(\"abqeri_session\", tok) });\n  } catch (e) {\n    const dev = env.ALLOW_FAKE_TURNSTILE === \"1\" ? { dev_hint: String(e?.message || e) } : {};\n    return J({ ok:false, error:\"db_error\", ...dev }, 500);\n  }\n}\n\nasync function POST_logout(_env, _req) {\n  return new Response(\"\", { status:302, headers:{ \"Set-Cookie\":\"abqeri_session=; Path=/; Max-Age=0; SameSite=Lax\", Location:\"/\" } });\n}\nasync function GET_me(env, req) {\n  const s = await session(env, req);\n  return J({ ok:!!s, session:s||null });\n}\n\n// gate /workbench unless logged in\nasync function gateWorkbench(env, req) {\n  const u = new URL(req.url);\n  if (u.pathname === \"/workbench\" || u.pathname === \"/workbench.html\") {\n    const s = await session(env, req);\n    if (!s) return new Response(\"\", { status:302, headers:{ Location:\"/auth/login.html?next=/workbench\" } });\n  }\n  return null;\n}\n\n// ---------- Admin diag (dev only) ----------\nasync function GET_admin_diag(env) {\n  if (env.ALLOW_FAKE_TURNSTILE !== \"1\") return T(\"Forbidden\", 403);\n  const version = await getUserVersion(env).catch(()=>0);\n  const users = await env.abqeri_alpha.prepare(\"SELECT COUNT(*) AS n FROM users\").all().catch(()=>({results:[{n:0}]}));\n  return J({ ok:true, d1_user_version: version, users: users?.results?.[0]?.n ?? 0 });\n}\nasync function POST_admin_migrate(env) {\n  if (env.ALLOW_FAKE_TURNSTILE !== \"1\") return T(\"Forbidden\", 403);\n  const r = await runMigrations(env);\n  return J({ ok:true, applied:r.applied, version:r.version });\n}\n\n// ---------- Safe-AI (unchanged behavior) ----------\nconst RULES = [\n  { id:\"violence\", message:\"Violent wrongdoing detected. I won't help with harm. I can discuss safety or de-escalation.\",\n    tests:[/make\\s+(?:a|an)\\s+(?:bomb|explosive|weapon|gun|silencer|pipe\\s*bomb)/i, /\\bkill(?:ing)?\\b|\\bmaim\\b|\\bassassinate\\b|\\bexecute\\b/i] },\n  { id:\"cybercrime\", message:\"Harmful cyber activity detected. I can\u2019t assist. I can discuss defense and ethics instead.\",\n    tests:[/\\b(ddos|botnet|ransomware|zero[- ]day)\\b/i, /\\bbypass\\s+(?:2fa|mfa|license|paywall)\\b/i, /\\bhack(?:ing)?\\b/i] },\n];\nfunction screenSafety(text){ const hits=[]; for(const r of RULES) if(r.tests.some(rx=>rx.test(text))) hits.push({id:r.id,message:r.message}); return hits; }\nconst ABQ_SYSTEM = `You are Abqeri \u2014 answer with mercy, clarity, humility. Be brief and concrete; refuse harm safely; don't self-identify as an AI/model.`;\nfunction stripIdentity(s){ return (s||\"\").replace(/\\b(?:I(?:'| a)m|This is)\\s+(?:an?\\s+)?(?:AI|LLM|assistant|model)[^.,!?]*[.,!?]?\\s*/gi,\"\"); }\nfunction pickToken(x){ if(typeof x===\"string\")return x; if(!x)return\"\"; if(typeof x.response===\"string\")return x.response; if(x.delta?.content)return x.delta.content; if(x.choices?.[0]?.delta?.content)return x.choices[0].delta.content; if(typeof x.token===\"string\")return x.token; if(typeof x.text===\"string\")return x.text; return \"\"; }\n\nasync function GET_ai_status(env,_req){ return J({ hybrid:false, model:env.MODEL_ID||\"@cf/meta/llama-3.1-8b-instruct\" }); }\nasync function POST_ai_chat(env, req){\n  const { messages=[], lang=\"en\" } = await req.json().catch(()=>({}));\n  const userText = (messages?.[messages.length-1]?.content||\"\")+\"\";\n  const guards = screenSafety(userText);\n\n  const enc=new TextEncoder(); const xmeta=(action,hybrid=false)=>enc.encode(JSON.stringify({meta:{guardrails:guards,action,provenance:{model:env.MODEL_ID||\"@cf/meta/llama-3.1-8b-instruct\",hybrid}}})+\"\\n\");\n\n  if(guards.length){\n    const refusal = guards.map(g=>g.message).join(\" \");\n    const alt = \"If you'd like, I can help with high-level safety guidance, educational resources, or lawful alternatives.\";\n    const text = `I'm here to keep you safe. ${refusal} ${alt}`;\n    const parts = text.split(/(\\s+)/); let i=0;\n    return new Response(new ReadableStream({ start(c){ c.enqueue(xmeta(\"restrict\",false)); const iv=setInterval(()=>{ if(i>=parts.length){ clearInterval(iv); c.enqueue(enc.encode(\"[DONE]\\n\")); c.close(); return; } c.enqueue(enc.encode(JSON.stringify({token:parts[i++]})+\"\\n\")); }, 18);} }), {headers:{ \"content-type\":\"application/x-ndjson; charset=utf-8\" }});\n  }\n\n  const modelId=env.MODEL_ID||\"@cf/meta/llama-3.1-8b-instruct\";\n  const final=[{role:\"system\",content:ABQ_SYSTEM},...messages];\n\n  try{\n    if(env.AI?.run){\n      const r=await env.AI.run(modelId,{messages:final,stream:true,temperature:0.3,max_tokens:400,metadata:{lang}});\n      const reader=(typeof r?.getReader===\"function\")?r.getReader():r?.body?.getReader?.();\n      if(reader){\n        let buf=\"\"; const dec=new TextDecoder();\n        return new Response(new ReadableStream({\n          async start(c){\n            c.enqueue(xmeta(\"allow\",false));\n            while(true){\n              const {done,value}=await reader.read(); if(done)break;\n              buf+=dec.decode(value,{stream:true}); let idx;\n              while((idx=buf.indexOf(\"\\n\"))>=0){\n                const line=buf.slice(0,idx).trim(); buf=buf.slice(idx+1); if(!line)continue;\n                let obj=null; try{ const s=line.startsWith(\"data:\")?line.slice(5).trim():line; obj=JSON.parse(s); }catch{ obj=line; }\n                let t=pickToken(obj); if(t){ t=stripIdentity(t); c.enqueue(enc.encode(JSON.stringify({token:t})+\"\\n\")); }\n              }\n            }\n            c.enqueue(enc.encode(\"[DONE]\\n\")); c.close();\n          }\n        }), {headers:{ \"content-type\":\"application/x-ndjson; charset=utf-8\" }});\n      }\n    }\n  }catch{}\n\n  // fallback non-stream\n  let out=\"I can help with that. (Local demo \u2014 bind Workers AI for real-time tokens.)\";\n  try{\n    if(env.AI?.run){\n      const full=await env.AI.run(modelId,{messages:final,temperature:0.3,max_tokens:400,metadata:{lang}});\n      if(typeof full===\"string\") out=full;\n      else if(typeof full?.response===\"string\") out=full.response;\n      else if(Array.isArray(full?.choices)&&full.choices[0]?.message?.content) out=full.choices[0].message.content;\n    }\n  }catch{}\n  out=stripIdentity(out);\n  const parts=out.split(/(\\s+)/); let i=0;\n  return new Response(new ReadableStream({start(c){ c.enqueue(xmeta(\"allow\",false)); const iv=setInterval(()=>{ if(i>=parts.length){ clearInterval(iv); c.enqueue(enc.encode(\"[DONE]\\n\")); c.close(); return; } c.enqueue(enc.encode(JSON.stringify({token:parts[i++]})+\"\\n\")); },18);}}), {headers:{\"content-type\":\"application/x-ndjson; charset=utf-8\"}});\n}\n\n// ---------- Hybrid QPU demo ----------\nasync function POST_qpc_run(_env, req){\n  await req.json().catch(()=>({}));\n  const shots=512;\n  const p00=0.49+Math.random()*0.02, p11=0.49+Math.random()*0.02;\n  const p01=Math.max(0,1-p00-p11), p10=0;\n  const counts={ \"00\":Math.round(p00*shots), \"11\":Math.round(p11*shots), \"01\":Math.round(p01*shots), \"10\":Math.round(p10*shots) };\n  const baseline={latency:42+Math.random()*8, energy:22+Math.random()*6, fidelity:91+Math.random()*3};\n  const hybrid={latency:24+Math.random()*5, energy:10+Math.random()*4, fidelity:95+Math.random()*2};\n  return J({ ok:true, results:{counts,shots}, baseline, hybrid });\n}\n\n// ---------- Router ----------\nexport default {\n  async fetch(req, env) {\n    // require login for workbench\n    const gated = await gateWorkbench(env, req); if (gated) return gated;\n\n    const u = new URL(req.url); const p = u.pathname; const m = req.method;\n\n    // auth\n    if (p===\"/api/auth/register\" && m===\"POST\") return POST_register(env, req);\n    if (p===\"/api/auth/login\" && m===\"POST\")    return POST_login(env, req);\n    if (p===\"/api/auth/logout\" && m===\"POST\")   return POST_logout(env, req);\n    if (p===\"/api/auth/me\" && m===\"GET\")        return GET_me(env, req);\n\n    // admin diag (dev only)\n    if (p===\"/api/admin/db/diag\" && m===\"GET\")  return GET_admin_diag(env);\n    if (p===\"/api/admin/db/migrate\" && m===\"POST\") return POST_admin_migrate(env);\n\n    // safe-ai\n    if (p===\"/api/ai/status\" && m===\"GET\") return GET_ai_status(env, req);\n    if (p===\"/api/ai/chat\"   && m===\"POST\") return POST_ai_chat(env, req);\n\n    // qpu\n    if (p===\"/api/qpc/run\" && m===\"POST\") return POST_qpc_run(env, req);\n\n    // static\n    try { return await env.ASSETS.fetch(req); }\n    catch { return T(\"Not Found\", 404); }\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\abqeri-alpha-v6.7\\\\copy\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\ashar\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\ashar\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\abqeri-alpha-v6.7\\\\copy\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\abqeri-alpha-v6.7\\\\copy\\\\.wrangler\\\\tmp\\\\bundle-sbLwdd\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\ashar\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\abqeri-alpha-v6.7\\\\copy\\\\.wrangler\\\\tmp\\\\bundle-sbLwdd\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\abqeri-alpha-v6.7\\\\copy\\\\.wrangler\\\\tmp\\\\bundle-sbLwdd\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["parts", "i"]
}
